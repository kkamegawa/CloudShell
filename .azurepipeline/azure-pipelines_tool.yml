# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger: none

#schedules:
#  - cron: "0 3 * Sat *"
#    displayName: Weekly build
#    branches:
#      include:
#      - master
#    always: true

resources:
- repo: self

variables:
  group: GitHubCloudShell
  # Container registry service connection established during pipeline creation
  imageRepository: 'mycloudshell'
  dockerfilePath: '$(Build.SourcesDirectory)/linux/tools.Dockerfile'
  tag: '$(Build.BuildId)'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: AzureCLI@2
      inputs:
        azureSubscription: AzureContainerRegistry
        scriptType: 'pscore'
        scriptLocation: 'inlineScript'
        inlineScript: |
          docker build -t myazurecloudshell --build-arg IMAGE_LOCATION=$env:IMAGELOCATION -f linux/tools.Dockerfile $(Build.SourcesDirectory)/.
          docker image tag myazurecloudshell $env:CONTAINERREGISTRY/$env:CONTAINERNAME/:latest
          docker image tag myazurecloudshell $env:CONTAINERREGISTRY/$env:CONTAINERNAME/:$env:TAG
          docker image push -all-tags $env:CONTAINERREGISTRY
      env:
        IMAGELOCATION: $(baseimage)
        TAG: $(Build.BuildId)
        CONTAINERREGISTRY: $(containerRegistry)
        CONTAINERNAME: $(mycloudshell)
    - task: AzureCLI@2
      condition: succeeded()
      inputs:
        azureSubscription: AzureContainerRegistry
        scriptType: 'pscore'
        scriptLocation: 'inlineScript'
        inlineScript: |
          $limit = [datetime]::Now.AddDays(-2).tostring('yyy-MM-dd')
          az acr manifest list-metadata --name $env:CONTAINERNAME  --registry $env:DOCKER_CONNECTIONS  --orderby time_asc -o tsv --query "[?lastUpdateTime < $limit].[digest, lastUpdateTime]" \
            | xargs -I% az acr repository delete --name $env:containerRegistry --image $CONTAINERNAME@% --yes
      env:
        CONTAINERNAME: $(mycloudshell)
        DOCKER_CONNECTIONS: $(containerRegistry)
